<?php

/*  
  @TODO for (type)project (field)downloads we need a files/downloads directory created
  @TODO generate needs looking at for collections (it fails badly)
  @TODO if we're in a subprofile we could create the correct terms
*/
	function monograph_install() {
		include_once DRUPAL_ROOT . '/profiles/standard/standard.install';
		standard_install();

	//	Set some variables
		$acme_settings = array(
			'image_jpeg_quality' => '90',
		);

		foreach ($acme_settings as $v_name => $v_value) {
			variable_set($v_name, $v_value);
		}
		
//	install some modules to make the following work
//		$result = module_enable(array("shortcuts", "media", "monograph_projects", "monograph_media"));

		
		_monograph_configure_wysiwyg();	
//		_blackbeetle_dummy_content();
		
//	moved to features
//		_monograph_configure_shortcuts();
		
//	disable comments - we can't disable it in .info as that causes standard_install to fail
		module_disable(array("comments"));
		
  // Enable the admin theme.
  /*
	  db_update('system')
	    ->fields(array('status' => 1))
	    ->condition('type', 'theme')
	    ->condition('name', 'seven')
	    ->execute();
	  variable_set('admin_theme', 'seven');
	  variable_set('node_admin_theme', '1');
*/

// Any themes without keys here will get numeric keys and so will be enabled,
// but not placed into variables.
    $enable = array(
      'theme_default' => 'blackbeetle',
      'admin_theme' => 'seven',
    );
    theme_enable($enable);
 
    foreach ($enable as $var => $theme) {
      if (!is_numeric($var)) {
        variable_set($var, $theme);
      }
    }
//  disbale the default theme
    theme_disable(array('bartik'));

	}
	
	
//	moved to features
	function _monograph_configure_shortcuts() {
		$set = shortcut_set_load(st('Default'));
		$set->links[] =  array('link_path' => 'node/add/project', 'link_title' => st('Add project'));
		$set->links[] =  array('link_path' => 'admin/content/media', 'link_title' => st('Media library'));
		
		shortcut_set_save($set);
	}
	
	
	function _blackbeetle_dummy_content() {
//	  function devel_generate_terms($records, $vocabs, $maxlength = 12) {
//  function devel_generate_content($form_state) {
/*
  if (count($form_state['values']['node_types'])) {
    // Generate nodes.
    devel_generate_content_pre_node($form_state['values']);
    $start = time();
    for ($i = 1; $i <= $form_state['values']['num_nodes']; $i++) {
      devel_generate_content_add_node($form_state['values']);
*/
	  module_load_include('inc', 'devel_generate');
//  should just generate the right terms in this case i guess
    $vocabs = array('project_type');
    
//  should look up the correct vocab
    $vids = array();
    foreach ( $vocabs as $v ) {
      if ( $vid = _monograph_get_vocabulary_by_name($v) ) {
        $vids[] = $vid->vid;
      }
    }
    
    print_r($vids);
    
    devel_generate_terms(2, $vids);
    $values = array(
      'num_nodes' => 20,
      'node_types' => array('project')
    );
	  devel_generate_content($values);
	}

function _monograph_get_vocabulary_by_name($vocabulary_name) {
  $vocabs = taxonomy_get_vocabularies(NULL);
  foreach ($vocabs as $vocab_object) {
    if ($vocab_object->name == $vocabulary_name) {
      return $vocab_object;
    }
  }
  return NULL;
}


function _monograph_configure_wysiwyg() {
  //WYSIWYG Setup
  foreach (array('filtered_html','full_html') as $f) {
    $wysiwyg_setting = array ( 
		'default' => 1, 
		'user_choose' => 0, 
		'show_toggle' => 1, 
		'theme' => 'advanced', 
		'language' => 'en', 
		'wysiwyg_buttons' => array ( 
			'default' => array ( 
				'Bold' => 1, 
				'Italic' => 1, 
				'Underline' => 0, 
				'Strike' => 0, 
				'JustifyLeft' => 0, 
				'JustifyCenter' => 0, 
				'JustifyRight' => 0, 
				'JustifyBlock' => 0, 
				'BulletedList' => 0, 
				'NumberedList' => 0, 
				'Outdent' => 0, 
				'Indent' => 0, 
				'Undo' => 0, 
				'Redo' => 0, 
				'Link' => 1, 
				'Unlink' => 1, 
				'Anchor' => 0, 
				'Image' => 0, 
				'TextColor' => 0, 
				'BGColor' => 0, 
				'Superscript' => 0, 
				'Subscript' => 0, 
				'Blockquote' => 1, 
				'Source' => 0, 
				'HorizontalRule' => 0, 
				'Cut' => 0, 
				'Copy' => 0, 
				'Paste' => 0, 
				'PasteText' => 0, 
				'PasteFromWord' => 0, 
				'ShowBlocks' => 1, 
				'RemoveFormat' => 0, 
				'SpecialChar' => 1, 
				'About' => 0, 
				'Format' => 0, 
				'Font' => 0, 
				'FontSize' => 0, 
				'Styles' => 0, 
				'Table' => 0, 
				'Find' => 0, 
				'Replace' => 0, 
				'SelectAll' => 0, 
				'Flash' => 0, 
				'Smiley' => 0, 
				'Maximize' => 0, 	// doesn't work with admin toolbar
				'SpellChecker' => 0, 
				'Scayt' => 0, 
			), 
			'drupal' => array ( 
				'media' => 1, 
				'break' => 0, 
			), 
		), 
		'toolbar_loc' => 'top', 
		'toolbar_align' => 'left', 
		'path_loc' => 'bottom', 
		'resizing' => 1, 
		'verify_html' => 1, 
		'preformatted' => 0, 
		'convert_fonts_to_spans' => 1, 
		'remove_linebreaks' => 1, 
		'apply_source_formatting' => 0, 
		'paste_auto_cleanup_on_paste' => 0, 
//		'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div', 
		'block_formats' => 'p,h3,h4', 		
		'css_setting' => 'theme', 
		'css_path' => '',
		'css_classes' => '', 
		'buttons' => array ( 
			'default' => array ( 
				'Bold' => 1, 
				'Italic' => 1, 
				'Link' => 1, 
				'Unlink' => 1, 
				'Blockquote' => 1, 
				'SpecialChar' => 1, 
				'Maximize' => 0, 	// doesn't work with admin toolbar
				'ShowBlocks' => 1, 
			), 
			'drupal' => array ( 
				'media' => 0, 
			), 
		), 
	);
    db_merge('wysiwyg')
      ->key(array('format' => $f))
      ->fields(array(
        'editor' => 'ckeditor',
        'settings' => serialize($wysiwyg_setting),
      ))
      ->execute();
  }
}
	
